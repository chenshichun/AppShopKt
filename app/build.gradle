plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.app.shop"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        debug {
            storeFile file('..\\yhj.keystore')
            storePassword '840921'
            keyAlias = 'yhj'
            keyPassword '840921'
        }
        release {
            storeFile file('..\\yhj.keystore')
            storePassword '840921'
            keyAlias = 'yhj'
            keyPassword '840921'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //这里修改apk文件名
                def apkName = defaultConfig.applicationId.subSequence(defaultConfig.applicationId.lastIndexOf(".") + 1,
                        defaultConfig.applicationId.length()) +
                        "-" + variant.flavorName +
                        "-v" + defaultConfig.versionName +
                        "-" + releaseTime() +
                        ".apk";
                outputFileName = "${apkName}"
            }
    }

    flavorDimensions "tier"

    productFlavors {

        Testing {
            buildConfigField 'String', 'BASE_URL', '"https://dev.kjmall.cc/"'
            buildConfigField 'String', 'WHICH_SERVER', '"Testing"'
            dimension "tier"
        }

        Development {
            buildConfigField 'String', 'BASE_URL', '"https://dev.kjmall.cc/"'
            buildConfigField 'String', 'WHICH_SERVER', '"Development"'
            dimension "tier"
        }

        Product {
            buildConfigField 'String', 'BASE_URL', '"https://dev.kjmall.cc/"'
            buildConfigField 'String', 'WHICH_SERVER', '"Product"'
            dimension "tier"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //okhttp的log信息
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    //AutoDispose解决RxJava内存泄漏
    implementation 'com.uber.autodispose:autodispose:0.7.0'
    implementation 'com.uber.autodispose:autodispose-android:0.7.0'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:0.7.0'
    implementation 'com.dylanc:viewbinding-ktx:1.0.0'
    // 沉浸式状态栏
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    //轮播
    implementation 'com.youth.banner:banner:1.4.10'
    //日志
    implementation 'com.orhanobut:logger:2.2.0'
    // 视频播放器
    implementation 'cn.jzvd:jiaozivideoplayer:6.2.12'
    // 圆形头像
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    // 图片框架
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'

    implementation 'com.google.android.material:material:1.1.0-alpha10'
    // 查看图片
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    // toast工具
    implementation 'com.github.GrenderG:Toasty:1.5.2'
    implementation 'io.github.muddz:styleabletoast:2.4.0'
    // XEditText文本输入框
    implementation 'com.xw.repo:xedittext:2.2.6@aar'
    // 城市选择
    implementation 'com.desmond:CityPicker:0.4.6'
    // 动态权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    // 高德地图
    implementation files('libs\\AMap3DMap_7.8.0_AMapSearch_7.7.0_AMapLocation_5.3.0_20210317.jar')
    // 工具类
    implementation 'com.blankj:utilcode:1.30.0'
    // 腾讯轻量级存储
    implementation 'com.tencent:mmkv:1.2.11'
    // FlycoTabLayout
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'
    // room 数据库
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5" // Kotlin 使用 kapt
    implementation "androidx.room:room-ktx:2.2.5"//Coroutines support for Room 协程操作库
    // 瀑布流布局
    implementation 'com.google.android:flexbox:0.3.0-alpha3'
    // 照片选择
    implementation 'io.github.lucksiege:pictureselector:v3.10.5'
    // loading库
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'
    // 联动选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    // json
    implementation 'com.alibaba:fastjson:1.2.46'
    // 微信登录
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.4.3'
    // pop
    implementation 'com.github.li-xiaojun:XPopup:2.8.13'
    // SuperTextView
    implementation 'com.github.lygttpod:SuperTextView:2.4.6'
    // webview
    implementation 'com.github.Justson.AgentWeb:agentweb-core:v5.0.0-alpha.1-androidx'
    // 屏幕适配
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    // 多行的RadioGroup
    implementation 'com.github.Gavras:MultiLineRadioGroup:v1.0.0.6'
    // loadsir 自定义状态页面(加载中，加载失败，无数据，网络超时，如占位图)
    implementation 'com.kingja.loadsir:loadsir:1.3.8'
    // 刷新，加载更多
    implementation  'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    implementation  'io.github.scwang90:refresh-header-classics:2.0.5'    //经典刷新头
    // 二维码库
    implementation 'cn.yipianfengye.android:zxing-library:2.2'
    //materialratingbar 星星评分
    implementation 'me.zhanghai.android.materialratingbar:library:1.4.0'
    // 滑动删除
    implementation 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'

}

def releaseTime() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    return formattedDate
}